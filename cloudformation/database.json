{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Database with Read Replica",

  "Parameters": {
    "VPC": {
      "Description": "VPC",
      "Type": "String"
    },

    "CommonSecurityGroup": {
      "Description": "Web Server Security Group",
      "Type": "String"
    },

    "SSHLocation": {
      "Description": "Lockdown SSH access to the bastion host (default can be accessed from anywhere)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
    },

    "DBName": {
      "Description": "The database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9_]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    
    "DBInstanceIdentifier": {
      "Description": "Database instance name",
      "Type": "String",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9\\-]*",
      "ConstraintDescription": "Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens."
    },

    "DBUser": {
      "NoEcho": "true",
      "Description": "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },

    "DBPassword": {
      "NoEcho": "true",
      "Description": "The database admin account password",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]+",
      "ConstraintDescription": "must contain only alphanumeric characters."
    },

    "DBAllocatedStorage": {
      "Default": "5",
      "Description": "The size of the database (Gb)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "1024",
      "ConstraintDescription": "must be between 5 and 1024Gb."
    },

    "DBInstanceClass": {
      "Description": "The database instance type",
      "Type": "String",
      "Default": "db.t2.micro",
      "AllowedValues": ["db.t1.micro", "db.t2.micro", "db.t2.small", "db.t2.medium", "db.m1.small", "db.m1.medium", "db.m1.large", "db.m1.xlarge", "db.m2.xlarge", "db.m2.2xlarge", "db.m2.4xlarge", "db.m3.medium", "db.m3.large", "db.m3.xlarge", "db.m3.2xlarge", "db.r3.large", "db.r3.xlarge", "db.r3.2xlarge", "db.r3.4xlarge", "db.r3.8xlarge", "db.m2.xlarge", "db.m2.2xlarge", "db.m2.4xlarge", "db.cr1.8xlarge"],
      "ConstraintDescription": "must select a valid database instance type."
    },

    "DBMultiAZ": {
      "Description": "Multi-AZ master database",
      "Type": "String",
      "Default": "false",
      "AllowedValues": ["true", "false"],
      "ConstraintDescription": "must be true or false."
    },

    "DBReadReplica": {
      "Description": "Create a read replica database",
      "Type": "String",
      "Default": "false",
      "AllowedValues": ["true", "false"],
      "ConstraintDescription": "must be true or false."
    }
  },

  "Conditions": {
    "CreateReadReplica": {
      "Fn::Equals": [{
          "Ref": "DBReadReplica"
        },
        "true"
      ]
    }
  },

  "Mappings": {
    "SubnetConfig": {
      "DB1": {
        "CIDR": "10.0.1.0/24"
      },
      "DB2": {
        "CIDR": "10.0.2.0/24"
      }
    },
    "Region2S3WebsiteSuffix": {
      "us-east-1": {
        "Suffix": ".s3-website-us-east-1.amazonaws.com"
      },
      "us-west-1": {
        "Suffix": ".s3-website-us-west-1.amazonaws.com"
      },
      "us-west-2": {
        "Suffix": ".s3-website-us-west-2.amazonaws.com"
      },
      "eu-west-1": {
        "Suffix": ".s3-website-eu-west-1.amazonaws.com"
      },
      "ap-northeast-1": {
        "Suffix": ".s3-website-ap-northeast-1.amazonaws.com"
      },
      "ap-southeast-1": {
        "Suffix": ".s3-website-ap-southeast-1.amazonaws.com"
      },
      "ap-southeast-2": {
        "Suffix": ".s3-website-ap-southeast-2.amazonaws.com"
      },
      "sa-east-1": {
        "Suffix": ".s3-website-sa-east-1.amazonaws.com"
      },
      "cn-north-1": {
        "Suffix": ".s3-website.cn-north-1.amazonaws.com.cn"
      },
      "eu-central-1": {
        "Suffix": ".s3-website-eu-central-1.amazonaws.com"
      }
    }
  },

  "Resources": {
    "DBSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": ["SubnetConfig", "DB1", "CIDR"]
        },
        "AvailabilityZone": "us-west-2b",
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackId"
          }
        }]
      }
    },

    "DBSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::FindInMap": ["SubnetConfig", "DB2", "CIDR"]
        },
        "AvailabilityZone": "us-west-2c",
        "Tags": [{
          "Key": "Application",
          "Value": {
            "Ref": "AWS::StackId"
          }
        }]
      }
    },

    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "default",
        "SubnetIds": [{
          "Ref": "DBSubnet1"
        }, {
          "Ref": "DBSubnet2"
        }]
      }
    },

    "DBEC2SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Open database for access",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [{
          "IpProtocol": "tcp",
          "FromPort": "5432",
          "ToPort": "5432",
          "SourceSecurityGroupId": {
            "Ref": "CommonSecurityGroup"
          }
        }, {
          "IpProtocol": "tcp",
          "FromPort": "5432",
          "ToPort": "5432",
          "CidrIp": {
            "Ref": "SSHLocation"
          }
        }]
      }
    },

    "MasterDb": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "PubliclyAccessible": "true",
        "DBName": {
          "Ref": "DBName"
        },
        "AllocatedStorage": {
          "Ref": "DBAllocatedStorage"
        },
        "DBInstanceIdentifier": {
          "Ref": "DBInstanceIdentifier"
        },
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "Engine": "postgres",
        "MasterUsername": {
          "Ref": "DBUser"
        },
        "MasterUserPassword": {
          "Ref": "DBPassword"
        },
        "MultiAZ": {
          "Ref": "DBMultiAZ"
        },
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "VPCSecurityGroups": [{
          "Fn::GetAtt": ["DBEC2SecurityGroup", "GroupId"]
        }],
        "Tags": [{
          "Key": "Name",
          "Value": "Master Database"
        }]
      },
      "DeletionPolicy": "Snapshot"
    },

    "ReplicaDb": {
      "Type": "AWS::RDS::DBInstance",
      "Condition": "CreateReadReplica",
      "Properties": {
        "SourceDBInstanceIdentifier": {
          "Ref": "MasterDb"
        },
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "Read Replica Database"
        }]
      }
    }
  },

  "Outputs": {
    "MasterDbEndpoint": {
      "Description": "Master Database Endpoint",
      "Value": {
        "Fn::Join": ["", [{
            "Fn::GetAtt": ["MasterDb", "Endpoint.Address"]
          },
          ":", {
            "Fn::GetAtt": ["MasterDb", "Endpoint.Port"]
          }
        ]]
      }
    },

    "MasterDbConnectionString": {
      "Description": "Master Database Connection String",
      "Value": {
        "Fn::Join": ["", ["postgres://", {
            "Fn::GetAtt": ["MasterDb", "Endpoint.Address"]
          },
          ":", {
            "Fn::GetAtt": ["MasterDb", "Endpoint.Port"]
          }
        ]]
      }
    },

    "MasterDbName": {
      "Description": "Master Database Name",
      "Value": {
        "Ref": "DBName"
      }
    },

    "ReplicaDbEndpoint": {
      "Description": "Replica Database Endpoint",
      "Condition": "CreateReadReplica",
      "Value": {
        "Fn::Join": ["", [{
            "Fn::GetAtt": ["ReplicaDb", "Endpoint.Address"]
          },
          ":", {
            "Fn::GetAtt": ["ReplicaDb", "Endpoint.Port"]
          }
        ]]
      }
    },

    "ReplicaDbConnectionString": {
      "Description": "Replica Database Connection String",
      "Condition": "CreateReadReplica",
      "Value": {
        "Fn::Join": ["", ["postgres://", {
            "Fn::GetAtt": ["ReplicaDb", "Endpoint.Address"]
          },
          ":", {
            "Fn::GetAtt": ["ReplicaDb", "Endpoint.Port"]
          }
        ]]
      }
    },

    "ReplicaDbName": {
      "Description": "Replica Database Name",
      "Condition": "CreateReadReplica",
      "Value": {
        "Ref": "DBName"
      }
    }
  }
}